// (competition template stuff and functions go here)

// This code is for illustration only, it would not work well on a robot.

task usercontrol()
{
    /* 
    sensitivity controls whether the control loop responds slowly (will take longer
    to settle, but be gentler on the motors) or whether it responds faster. A higher
    value is more sensitive i.e. responds faster.
    */
    float sensitivity = 0.5;

    /* 
    tolerance controls the range of speed values that are close enough to the target
    for the robot to maintain its current speed. Higher tolerance will make the control
    more stable but less precise.
    */
    float tolerance = 1;

    /* 
    encoderReadings array contains the shaft encoder values in increments of 10ms
    for the last 100ms. These are used to estimate the current speed of the flywheel.
    */
    int encoderReadings[10] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

    while(1)
    {
        if (currentSpeed > (targetSpeed + tolerance){
            motorPower = motorPower - sensitivity;
        }
        else if (currentSpeed < (targetSpeed - tolerance)){
            motorPower = motorPower + sensitivity;
        }
        
        currentSpeed = getCurrentSpeed(encoderReadings);

        setFlywheelMotors(motorPower);

        wait1msec(10);
    }
}
